{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\openweather-app\\\\frontend\\\\src\\\\components\\\\weather.js\",\n  _s = $RefreshSig$();\n// src/components/Weather.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = ['Lisbon', 'Leiria', 'Coimbra', 'Porto', 'Faro'];\nfunction Weather() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const weatherDataPromises = cities.map(async city => {\n        const response = await axios.get(`http://localhost:5000/api/weather/${city}`);\n        return response.data;\n      });\n      const weatherDataArray = await Promise.all(weatherDataPromises);\n      setWeatherData(weatherDataArray);\n    }\n    fetchData();\n  }, []);\n  let weatherIcon = \"https://openweathermap.org/img/wn/\" + data.weather[0].icon + \"@2x.png\";\n  return /*#__PURE__*/_jsxDEV(Container, {\n    bg: \"dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: weatherData !== null ? weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(Col, {\n        sm: true,\n        md: 4,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"weatherCard\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [data.name, \", \", data.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Max : \", data.main.temp_max, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Min : \", data.main.temp_min, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Humidity: \", data.main.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Weather: \", data.weather[0].description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Weather: \", data.weather[0].icon]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: weatherIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Weather, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Row","Col","Card","jsxDEV","_jsxDEV","cities","Weather","_s","weatherData","setWeatherData","fetchData","weatherDataPromises","map","city","response","get","data","weatherDataArray","Promise","all","weatherIcon","weather","icon","bg","children","className","fileName","_jsxFileName","lineNumber","columnNumber","index","sm","md","Body","name","sys","country","main","temp_max","temp_min","humidity","description","src","_c","$RefreshReg$"],"sources":["D:/Github/openweather-app/frontend/src/components/weather.js"],"sourcesContent":["// src/components/Weather.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst cities = ['Lisbon', 'Leiria', 'Coimbra', 'Porto', 'Faro'];\r\n\r\nfunction Weather() {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    \r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n          const weatherDataPromises = cities.map(async (city) => {\r\n            const response = await axios.get(\r\n              `http://localhost:5000/api/weather/${city}`\r\n            );\r\n            return response.data;\r\n          });\r\n    \r\n          const weatherDataArray = await Promise.all(weatherDataPromises);\r\n          setWeatherData(weatherDataArray);\r\n        }\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n      let weatherIcon =\"https://openweathermap.org/img/wn/\"+data.weather[0].icon+\"@2x.png\";\r\n\r\n      return (\r\n        \r\n        <Container bg=\"dark\">\r\n  \r\n          <h1 className=\"mt-5\">Weather App</h1>\r\n          <Row className=\"mt-3\">\r\n            {weatherData !== null ? (\r\n              weatherData.map((data, index) => (\r\n                <Col sm key={index} md={4} className=\"mb-3\">\r\n                  <Card  className=\"weatherCard\" >\r\n                    <Card.Body>\r\n                      <h2>{data.name}, {data.sys.country}</h2>\r\n                      <p>Max : {data.main.temp_max}°C</p>\r\n                      <p>Min : {data.main.temp_min}°C</p>\r\n                      <p>Humidity: {data.main.humidity}%</p>\r\n                      <p>Weather: {data.weather[0].description}</p>\r\n                      <p>Weather: {data.weather[0].icon}</p>\r\n                      <img src={weatherIcon}></img>\r\n\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              ))\r\n            ) : (\r\n              <p>Loading weather data...</p>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n    \r\n    export default Weather;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}